<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Landing Page</title>
    <script src="https://cdn.tailwindcss.com"></script>
    
    <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/animejs@3.2.1/lib/anime.min.js"></script>


    <script defer src="assets/animejs/lib/anime.min.js"></script>
    <!-- Swiper.js CSS -->
    <link rel="stylesheet" href="assets/swiper/swiper-bundle.min.css">
    <style>
        /* Custom Tailwind Config */
        @tailwind base;
        @tailwind components;
        @tailwind utilities;
                
        .button-17 {
        align-items: center;
        appearance: none;
        background-color: #fff;
        border-radius: 24px;
        border-style: none;
        box-shadow: rgba(0, 0, 0, .2) 0 3px 5px -1px,rgba(0, 0, 0, .14) 0 6px 10px 0,rgba(0, 0, 0, .12) 0 1px 18px 0;
        box-sizing: border-box;
        color: #3c4043;
        cursor: pointer;
        display: inline-flex;
        fill: currentcolor;
        font-family: "Google Sans",Roboto,Arial,sans-serif;
        font-size: 14px;
        font-weight: 500;
        height: 48px;
        justify-content: center;
        letter-spacing: .25px;
        line-height: normal;
        max-width: 100%;
        overflow: visible;
        padding: 2px 24px;
        position: relative;
        text-align: center;
        text-transform: none;
        transition: box-shadow 280ms cubic-bezier(.4, 0, .2, 1),opacity 15ms linear 30ms,transform 270ms cubic-bezier(0, 0, .2, 1) 0ms;
        user-select: none;
        -webkit-user-select: none;
        touch-action: manipulation;
        width: auto;
        will-change: transform,opacity;
        z-index: 0;
        }

        .button-17:hover {
        background: #F6F9FE;
        color: #174ea6;
        }

        .button-17:active {
        box-shadow: 0 4px 4px 0 rgb(60 64 67 / 30%), 0 8px 12px 6px rgb(60 64 67 / 15%);
        outline: none;
        }

        .button-17:focus {
        outline: none;
        border: 2px solid #4285f4;
        }

        .button-17:not(:disabled) {
        box-shadow: rgba(60, 64, 67, .3) 0 1px 3px 0, rgba(60, 64, 67, .15) 0 4px 8px 3px;
        }

        .button-17:not(:disabled):hover {
        box-shadow: rgba(60, 64, 67, .3) 0 2px 3px 0, rgba(60, 64, 67, .15) 0 6px 10px 4px;
        }

        .button-17:not(:disabled):focus {
        box-shadow: rgba(60, 64, 67, .3) 0 1px 3px 0, rgba(60, 64, 67, .15) 0 4px 8px 3px;
        }

        .button-17:not(:disabled):active {
        box-shadow: rgba(60, 64, 67, .3) 0 4px 4px 0, rgba(60, 64, 67, .15) 0 8px 12px 6px;
        }

        .button-17:disabled {
        box-shadow: rgba(60, 64, 67, .3) 0 1px 3px 0, rgba(60, 64, 67, .15) 0 4px 8px 3px;
        }
        
    </style>

</head>
<body class="bg-gray-100 text-gray-900">

    {{ template "header"}}
   {{ template "sidebar"}}
   <div id="sisa-ruang" style="width: 112rem; margin-left: 7rem; margin-right: 1.875rem; height: 140rem; margin-top: 4.25rem; background: white; border: 1px solid #d1d1d1; border-radius: 15px; box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.05); display: flex; flex-direction: column; gap: 1rem; padding: 1rem;">
   {{ template "keranjang" }}
   {{template "Pengguna_side"}}
   

   <div style="display:none;" class="fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-[9999] backdrop-blur-sm pointer-events-auto">
  <div class="relative bg-white rounded-3xl shadow-[0_10px_30px_rgba(0,0,0,0.15)] flex flex-col md:flex-row w-full max-w-5xl p-8 md:p-10 animate-fade-in transition-all duration-300 ease-in-out z-[10000]" >

    <!-- Tombol Close -->
    <button class="absolute top-4 right-4 text-gray-400 hover:text-red-500 text-2xl font-extrabold transition-transform duration-200 hover:scale-125" onclick="closePopup()">
      &times;
    </button>

    <!-- Kolom Kiri -->
    <div class="md:w-1/2 md:pr-8 flex flex-col justify-between">
      <div>
        <h2 class="text-3xl font-bold text-gray-800 mb-5 tracking-tight" id="nama_barang_popup">Nama Barang</h2>

       <div class="bg-gray-100 rounded-2xl h-32 flex items-center justify-center text-base text-gray-600 mb-6 px-6 shadow-inner overflow-auto break-words p-6 ">
        <p id="deskripsi_barang_popup" class="mt-5 text-left"> </p>
      </div>


        <p class="text-sm font-medium text-gray-500 mb-8 italic break-words max-w-xs" id="jenis_barang_popup"></p>

        <div class="bg-white border border-gray-300 rounded-lg py-2 px-3 text-center shadow-sm grid grid-cols-1 sm:grid-cols-3 gap-4 mb-5">
          <div class="bg-white py-2 px-3 text-center shadow-sm">
            <p class="text-[10px] text-gray-500 mb-1">Ukuran</p>
            <select id="ukuran_barang_popup" class="text-sm text-gray-700 font-semibold bg-transparent outline-none w-full">
              <!-- opsi ukuran di sini -->
            </select>
          </div>

          <div class="bg-white py-2 px-3 text-center shadow-sm">
            <p class="text-[10px] text-gray-500 mb-1">Warna</p>
            <select id="warna_barang_popup" class="text-sm text-gray-700 font-semibold bg-transparent outline-none w-full">
              <!-- opsi warna di sini -->
            </select>
          </div>

          <div class="bg-white px-3 text-center shadow-sm">
            <p class="text-[10px] text-gray-500 mb-1">Jumlah Pesan</p>
            <p style="display: none ;" class="text-[10px] text-gray-500 mb-1">Kategori: <span id="kategori_barang_popup"></span></p>
            <input type="number" id="jumlah_pesan" min="1" value="1" class="text-sm text-gray-700 font-semibold bg-transparent outline-none w-full border border-gray-300 rounded px-2 py-1" />
          </div>

        </div>
      </div>

      <div class="flex flex-col gap-4">
        <div class="bg-gray-900 text-white py-3 rounded-full text-center text-lg font-semibold tracking-wide shadow-md hover:bg-black transition-all duration-200" id="harga_barang_popup">
          Rp 199.000
        </div>

        <button class="bg-teal-500 text-white py-3 rounded-full w-full flex items-center justify-center gap-3 font-semibold text-lg shadow-lg hover:bg-teal-600 transition-all duration-400" id="tambah_keranjang_popup">
          <i class="fa-solid fa-cart-shopping text-base"></i>
          Tambah ke Keranjang
        </button>
      </div>
    </div>

    <!-- Garis Pemisah -->
    <div class="hidden md:block border-l mx-8 border-gray-200"></div>

    <!-- Kolom Kanan -->
    <div class="md:w-1/2 flex flex-col items-center justify-center mt-8 md:mt-0 relative space-y-4">
      <p class="text-sm font-semibold text-gray-700 tracking-wide">Foto Produk</p>

      <div class="w-60 h-80 bg-gray-100 rounded-2xl overflow-hidden flex items-center justify-center relative shadow-inner">
        <img src="https://via.placeholder.com/250x180" alt="Foto Barang" class="object-contain max-h-full max-w-full transition-transform duration-300 hover:scale-105" id="foto_barang_popup" />
        <div class="absolute bottom-2 right-3 text-[10px] text-gray-400 select-none pointer-events-none tracking-wide">
          Â© Faizh Shop
        </div>
      </div>

      <!-- Info stok tersembunyi -->
      <div class="grid grid-cols-2 sm:grid-cols-3 gap-2 mt-4 w-full max-w-[20rem]" style="display:none">
        <div class="bg-white border border-gray-300 rounded-lg py-2 px-3 text-center shadow-sm">
          <p class="text-[10px] text-gray-500">Stok</p>
          <p class="text-sm font-semibold text-gray-700" id="stok_barang_popup">50</p>
        </div>
      </div>
    </div>
  </div>
</div>

       <div class="grid grid-cols-12 items-center p-4 gap-3 bg-white shadow-sm rounded-md border border-gray-200">
    <!-- Tombol Kembali -->
    <div class="col-span-1 flex justify-center">
        <button class="w-10 h-10 bg-green-100 hover:bg-green-200 text-green-600 rounded-md flex items-center justify-center transition">
            <i class="fa-solid fa-arrow-left text-lg"></i>
        </button>
    </div>

    <!-- Input Pencarian + Voice -->
    <div class="col-span-9  flex items-center bg-gray-100 rounded-md border border-gray-300 px-2 py-1.5">
        <input 
            type="text" 
            placeholder="Cari produk, brand, atau kategori" 
            id="cari_produk" 
            class="flex-grow bg-transparent focus:outline-none px-2 text-sm text-gray-700"
        >
        <!-- Voice icon -->
        <button class="text-gray-500 hover:text-green-600 transition" title="Pencarian suara">
            <i class="fas fa-microphone text-lg"></i>
        </button>
    </div>

    <!-- Tombol Cari -->
    <div class="col-span-2">
        <button 
            id="cari_produk_button" 
            class="w-full bg-green-500 hover:bg-green-600 text-white font-semibold px-4 py-2 rounded-md transition"
        >
            Cari
        </button>
    </div>

    <!-- Ikon Tambahan -->
    
</div>


    

            <div class="flex items-center w-full mt-3">
                <div class="flex-2 text-lg font-bold text-gray-600 bg-gray-100 px-4 py-2 rounded-md text-center shadow-sm">
                    <h2 class="text-sm text-gray-600">Produk</h2>
                </div>
                <hr class="flex-1 h-[1.5px] bg-gray-400 border-none ml-2">
            </div>

    <div id="display_produk"class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-6 p-4" >
    
    </div>

    <div class="flex items-center justify-between border-t border-gray-200 bg-white px-4 py-3 sm:px-6">
    <div class="flex flex-1 justify-between sm:hidden">
        <a href="#" class="relative inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50">Previous</a>
        <a href="#" class="relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50">Next</a>
    </div>
    <div class="hidden sm:flex sm:flex-1 sm:items-center sm:justify-between">
        <div>
        <p class="text-sm text-gray-700">
            Menunjukan
            <span class="font-medium" id="mulai">0</span>
            sampai
            <span class="font-medium" id="sampai"></span>
            dari
            <span class="font-medium" id="dari"></span>
            Hasil
        </p>
        </div>
        <div>
        <nav id="paginasi_produk" class="isolate inline-flex -space-x-px rounded-md shadow-xs" aria-label="Pagination">
            
        </nav>
        </div>
    </div>
    </div>

    {{ template "fungsi_barang" }}

{{/* bootscript digunakan saat program dimulai */}}
<script>
        let inputan = "";

        function getStartEndRanges(totalData, batchSize = 20) {
            let ranges = [];
            let multiple = 1;
            
            for (let i = 0; i < totalData; i += batchSize) {
                let start = i;
                let end = Math.min(i + batchSize, totalData);
                ranges.push({ multiple, start, end });
                multiple++;


                console.log(ranges);
                console.log(batchSize);
            }
            return ranges;
        }


        async function Ambil_barang(jenis, start, end) {
            const url = "/app/endpoint.go"; // Endpoint tujuan
            const data = { data: "apakek" }; // Data yang dikirim (sesuaikan)

            if (jenis == null || jenis == ""){
                console.log("mencari secara default");

                try {
                    const response = await fetch(url, {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json", // Format JSON
                        },
                        body: JSON.stringify({ tujuan: "Ambil Data Barang Pria", data }), // Konversi data ke JSON
                    });

                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }

                    const result = await response.json(); // Mengambil response JSON
                    return result;
                } catch (error) {
                    console.error("Gagal mengambil data:", error);
                    return null;
                }
            } else {
                console.log(jenis, "ini yang dicari");
            }
        }

        document.getElementById("cari_produk").addEventListener("keyup", function() {
            inputan = this.value;
            console.log("Input sekarang:", inputan);
        });

        async function Cari_barang(input, start, end) {
            try {
                console.log("Item dengan nama =", input);

                const response = await fetch("/app/endpoint.go", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ tujuan: "Mencari Barang Pria", data: input })
                });

                // Cek apakah responsenya sukses
                if (!response.ok) {
                    console.error("Response error status:", response.status);
                    throw new Error("Network response was not ok");
                }

               
                const result = await response.json(); // Mengambil response JSON
                return result;

            } catch (error) {
                console.error("Terjadi kesalahan saat fetch:", error);
            }
        }



    async function TampilkanBarang(tipe, start, end) {
            const container = document.getElementById("display_produk"); // Elemen tempat card ditampilkan
            container.innerHTML = ""; // Kosongkan kontainer sebelum menambahkan data baru

            console.log("tampilkan barang dijalankan mengecek end", end)
            
            let data

            if(tipe == "mencari" && inputan.length != 0){
            console.log("mengecek apakah inputan itu ada nilainya?", inputan);
            data = await Cari_barang(inputan);
                if (!data) {
                    container.innerHTML = "<p class='text-red-500'>Gagal mengambil data produk.</p>";
                    return;
                }
            } else {
                
                data = await Ambil_barang();
                if (!data) {
                    container.innerHTML = "<p class='text-red-500'>Gagal mengambil data produk.</p>";
                    return;
                }
            }

            let totalData = data.length;
            let result = getStartEndRanges(totalData);
            console.log(result);
            console.log(data);

            document.getElementById("dari").textContent = totalData;
            document.getElementById("mulai").textContent = start;
            document.getElementById("sampai").textContent = end;

            let paginationContainer = document.getElementById("paginasi_produk");

            // Reset isi kontainer sebelum diisi ulang
            paginationContainer.innerHTML = "";

            let paginationHTML = `  
                <span class="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 ring-1 ring-gray-300 ring-inset hover:bg-gray-50 focus:z-20 focus:outline-offset-0">
                    <span class="sr-only">Previous</span>
                    <svg class="size-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" data-slot="icon">
                        <path fill-rule="evenodd" d="M11.78 5.22a.75.75 0 0 1 0 1.06L8.06 10l3.72 3.72a.75.75 0 1 1-1.06 1.06l-4.25-4.25a.75.75 0 0 1 0-1.06l4.25-4.25a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd" />
                    </svg>
                </span>
            `;

            // Looping untuk menambahkan angka pagination
            result.forEach(hasil => {
                console.log(hasil.multiple); // Menampislkan angka yang akan ditampilkan di pagination

                paginationHTML += `
                    <a start-attribut="mulai-${hasil.start}" end-attribut="mulai-${hasil.end}" class="relative inline-flex items-center px-4 py-2 text-sm font-semibold text-gray-900 ring-1 ring-gray-300 ring-inset hover:bg-gray-50 focus:z-20 focus:outline-offset-0">${hasil.multiple}</a>
                `;

                console.log(hasil.start, hasil.end, hasil.multiple)
            });

            paginationHTML += `
                <span class="relative inline-flex items-center rounded-r-md px-2 py-2 text-gray-400 ring-1 ring-gray-300 ring-inset hover:bg-gray-50 focus:z-20 focus:outline-offset-0">
                    <span class="sr-only">Next</span>
                    <svg class="size-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" data-slot="icon">
                        <path fill-rule="evenodd" d="M8.22 5.22a.75.75 0 0 1 1.06 0l4.25 4.25a.75.75 0 0 1 0 1.06l-4.25 4.25a.75.75 0 0 1-1.06-1.06L11.94 10 8.22 6.28a.75.75 0 0 1 0-1.06Z" clip-rule="evenodd" />
                    </svg>
                </span>
            `;

            // Set HTML setelah loop selesai
            paginationContainer.innerHTML = paginationHTML;


            data.slice(start, end).forEach(async (item) => {

            console.log(start,end, "dimulai diakhiri");
                const card = document.createElement("div");
                card.className = "p-2 display_produk_card";
                card.setAttribute("data-nama", item.nama);
                card.setAttribute("data-deskripsi", item.deskripsi);
                card.setAttribute("data-harga", item.harga);
                card.setAttribute("data-id", item.id);
                card.setAttribute("data-jenis", item.jenis_pakaian);
                card.setAttribute("data-stok", item.stok);
                card.setAttribute("data-warna", item.warna);
                card.setAttribute("data-ukuran", item.ukuran);
                // Menambahkan atribut custom ke dalam card
                card.setAttribute("nama", item.nama);
                card.setAttribute("data-kategori", item.kategori);
                card.setAttribute("deskripsi", item.deskripsi);

                // Pastikan nama tidak mengandung karakter yang tidak valid untuk class
                const safeNama = item.nama.replace(/[\s.&]+/g, "");

                card.innerHTML = `
              
                <div class="w-full rounded-xl shadow-md border border-gray-200 bg-[#f9f9f9] p-6 text-center font-sans">

              <!-- ROW 1: Gambar + Info -->
              <div class="flex flex-row gap-6 h-60"> <!-- Fixed height for row -->
                
                <!-- Kolom 1 (Gambar) -->
                <div class="canvas-${safeNama} w-[40%] h-24 rounded-xl flex items-center justify-center overflow-hidden relative group cursor-pointer bg-gray-100">
                  <img src="${item.gambarUrl || ''}"  class="w-full h-full object-cover rounded-xl transition-transform duration-500 group-hover:scale-105" />
                  
                  <!-- Overlay hover -->
                  <span class="absolute inset-0 bg-black bg-opacity-30 opacity-0 group-hover:opacity-100 flex items-center justify-center text-white text-sm font-semibold transition-opacity">
                    Lihat Detail
                  </span>

                  <!-- Placeholder teks jika tidak ada gambar -->
                  <span class="absolute z-10 text-white text-md font-medium ${item.gambarUrl ? 'hidden' : ''}">
                    Gambar ${item.nama}
                  </span>

                  <!-- Tombol Wishlist -->
                  <button class="absolute bottom-3 left-3 text-white bg-black bg-opacity-60 hover:bg-opacity-80 px-3 py-1 rounded-full transition-all z-20" onclick="Wishlist('${item.nama}', '${item.kode_barang}')">
                    <i class="fa-regular fa-heart text-lg" data-kode="${item.kode_barang}" data-judul="${item.nama}" id="wishlist_element"></i>
                  </button>
                </div>

                <!-- Kolom 2 (Informasi Ringkas) -->
                <div class="w-[60%] text-left overflow-hidden flex flex-col justify-between">
                  <div class="space-y-1  overflow-hidden">
                    <p class="text-lg font-semibold text-gray-800 truncate"><strong>${item.nama}</strong></p>
                    <p class="text-sm text-gray-600"><strong>Kategori:</strong> ${item.jenis_pakaian}</p>
                    <p class="text-sm text-gray-600 line-clamp-2"><strong>Deskripsi:</strong> ${item.deskripsi}</p>
                    <p class="text-sm text-gray-600"><strong>Stok:</strong> ${item.stok}</p>
                    <p class="text-base text-emerald-600 font-semibold"><strong>Harga:</strong> Rp ${item.harga.toLocaleString('id-ID')}</p>
                  </div>
                </div>
              </div>
              

              <hr class="my-6 border-gray-300">

              <!-- Tombol Aksi -->
              <div class="flex justify-center gap-4">
                <button class="button-17 bg-emerald-500 hover:bg-emerald-600 text-white px-5 py-2 rounded-lg shadow-md transition-all"
                  onclick="Beli('${item.nama}', '${item.kode_barang}')">
                  <i class="fa-solid fa-cart-shopping me-2"></i> Keranjang
                </button>
                <button class="button-17 bg-gray-200 hover:bg-gray-300 text-gray-800 px-5 py-2 rounded-lg shadow-md w-[60%] transition-all"
                  onclick="Detail('${item.nama}', '${item.kode_barang}')">
                  <i class="fa-solid fa-info-circle me-2"></i> Detail / Deskripsi
                </button>
              </div>

            </div>




            `;

            console.log(item.nama);

            container.appendChild(card);

           anime({
            targets: ".display_produk_card",
            opacity: [0, 1],
            scale: [0.9, 1],
            translateY: [20, 0],
            easing: 'easeOutExpo',
            duration: 400,
            delay: function(el, i) {
              return Math.random() * 1000; // delay acak antara 0 - 1000ms
            }
          });

            try {
            const response = await fetch("/app/endpoint.go", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({
                    tujuan : "ambil_foto",
                    data:{
                        nama: `${item.nama}`,
                        jenis_pakaian: `${item.jenis_pakaian}`
                    }
                }),
            });

            if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
                console.log(item.nama, item.jenis_pakaian);
            }

            const blob = await response.blob();
            const imgUrl = URL.createObjectURL(blob);

            console.log("nih dia:", safeNama);

            // Masukkan gambar ke dalam canvas
            const canvas = card.querySelector(`.canvas-${safeNama}`);
            console.log("Ini canvas cuy:", canvas)
            if (canvas) {
              canvas.innerHTML = `
                <img src="${imgUrl}" 
                    class="w-24 h-24 object-contain transition-transform duration-500 group-hover:scale-105" 
                    alt="${item.nama}">
                <span class="absolute inset-0 bg-black bg-opacity-20 opacity-0 group-hover:opacity-100 flex items-center justify-center text-white text-sm font-semibold transition-opacity">
                  Lihat Detail
                </span>
              `;
            }

        } catch (error) {
            console.error(`Gagal mengambil data untuk ${item.nama}:`, error);
        }

          
      });

          const kartu = document.querySelectorAll(".display_produk_card");
          const popup = document.querySelector('.fixed.inset-0');

          kartu.forEach(card => {
            card.addEventListener("click", (event) => {

              // Tampilkan elemen terlebih dahulu
              popup.style.display = "flex";

              // Reset dulu agar bisa animasi dari awal
              popup.style.opacity = 0;
              popup.style.transform = "scale(0.9)";

              // Jalankan animasi dengan Anime.js
              anime({
                targets: popup,
                opacity: [0, 1],
                scale: [1, 1],
                easing: 'easeOutQuad',
                duration: 400
              });

              const nama = card.dataset.nama;
              const deskripsi = card.dataset.deskripsi;
              const harga = card.dataset.harga;
              const id = card.dataset.id;
              const jenis = card.dataset.jenis;
              const stok = card.dataset.stok;
              const warna = card.dataset.warna;
              const ukuran = card.dataset.ukuran;
              const kategori = card.dataset.kategori;

              Pop_up_Barang(nama, harga, deskripsi, id, jenis, stok, ukuran, warna, kategori);
            });
          });


          
    }

    // Panggil fungsi saat halaman dimuat
        document.addEventListener("DOMContentLoaded", TampilkanBarang("default" , 0, 20));

        const pagination = document.getElementById("paginasi_produk");
        
        if (pagination) {
            pagination.addEventListener("click", function(event) {
                const target = event.target.closest("a"); 
                if (target) {
            console.log(target.textContent.trim());

        // Tambahkan efek background indigo
        target.classList.add("bg-indigo-600", "transition", "duration-400", "ease-in-out", "scale-105");

        // Ambil nilai dari atribut start-attribut dan end-attribut
        let startAttr = target.getAttribute("start-attribut").replace(/\D/g, "");
        let endAttr = target.getAttribute("end-attribut").replace(/\D/g, "");

        console.log(startAttr);
        console.log(endAttr);

        const awal = parseInt(startAttr);
        const akhir = parseInt(endAttr);

        if(inputan.length != 0){
         TampilkanBarang("default", awal, akhir);
        } else{
        TampilkanBarang("mencari", awal, akhir);
        }
        // Cetak ke console
        console.log("Start Attribut:", startAttr);
        console.log("End Attribut:", endAttr);

        // Hapus efek setelah 0.4 detik
        setTimeout(() => {
            target.classList.remove("bg-indigo-600", "scale-105");
        }, 400);
    }

            });
        }
    
    document.getElementById("sedang_dimana").textContent = "Home"

    const token = localStorage.getItem("token");

    console.log(localStorage.getItem("token"));

        // Ambil ukuran viewport (lebar & tinggi)
        const viewportWidth = window.innerWidth;
        const viewportHeight = window.innerHeight;

        // Ambil ukuran sidebar dan navbar
        const sidebarWidth = document.getElementById("sidebar").offsetWidth; // Gantilah dengan kelas sidebar yang sesuai
        const navbarHeight = document.getElementById("navbar").offsetHeight; // Gantilah dengan kelas navbar yang sesuai

        // Hitung sisa ruang
        const remainingWidth = viewportWidth - sidebarWidth;
        const remainingHeight = viewportHeight - navbarHeight;

        console.log(`Sisa ruang lebar: ${remainingWidth}px`);
        console.log(`Sisa ruang tinggi: ${remainingHeight}px`);


        

</script>

<script> 
    
document.getElementById("cari_produk_button").addEventListener("click", function () {

    TampilkanBarang("mencari", 0, 20);
    
    // Jika ingin memanggil fungsi async Ambil_barang, bisa ditambahkan seperti ini:
    // Ambil_barang(inputan);
});

function closePopup() {
  const popup = document.querySelector('.fixed.inset-0');
  if (popup) {
    popup.style.display = 'none'; // Sembunyikan popup
  }

  if (membuka_popup === true) {
    membuka_popup = false;
  }
}
</script>

{{ template "logic_keranjang" }}


    
</body>
</html>